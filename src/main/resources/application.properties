spring.application.name=mimi
spring.messages.basename=messages.message
spring.messages.encoding=UTF-8

server.servlet.encoding.enabled=true

file-store-path = /Users/hyun/study/mimi-file-store

#mybatis 사용
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/mimi
spring.datasource.username=mimi-user
spring.datasource.password=Mimi123!
mybatis.configuration.map-underscore-to-camel-case=true

# @mapper를 써서 할 수 있는 경우.
# MyBatis Configurations
mybatis.type-aliases-package=com.hello.mimi.standard.**.*


#h2 사용
#spring.h2.console.path=/h2-console
#spring.datasource.url=jdbc:h2:tcp://localhost/~/test
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=


#mapper의 위치
#mapper-locations=classpath:mapper/h2/**/*.xml
#mapper-locations=classpath:mapper/mybatis/**/*.xml




# MyBatis 로그 레벨 설정
logging.level.org.mybatis=DEBUG

# Spring JDBC 로그 레벨 설정
logging.level.org.springframework.jdbc=DEBUG

# Spring 트랜잭션 로그 레벨 설정
logging.level.org.springframework.transaction=DEBUG

# SQL 로그 포맷을 좀 더 읽기 쉽게 출력
logging.level.org.apache.ibatis.logging.stdout.StdOutImpl=TRACE

# Console에 로그 출력 설정 (옵션)
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl




#수정사항을 바로 반영하기 위해 false 로 설정한다.
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
